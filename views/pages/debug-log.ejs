<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Debug Log - Shared Block Issue</title>
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
      rel="stylesheet"
    />
    <script src="/public/js/notifications.js"></script>
    <style>
      body {
        font-family: "Courier New", monospace;
        background: #1a1a1a;
        color: #00ff00;
        margin: 0;
        padding: 20px;
      }
      .header {
        background: #333;
        color: #fff;
        padding: 15px;
        margin-bottom: 20px;
        border-radius: 5px;
      }
      .log-container {
        background: #000;
        border: 1px solid #333;
        border-radius: 5px;
        padding: 15px;
        height: 80vh;
        overflow-y: auto;
        white-space: pre-wrap;
        font-size: 12px;
        line-height: 1.4;
      }
      .refresh-btn {
        background: #007bff;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: pointer;
        margin-bottom: 10px;
      }
      .refresh-btn:hover {
        background: #0056b3;
      }
      .clear-btn {
        background: #dc3545;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: pointer;
        margin-bottom: 10px;
        margin-left: 10px;
      }
      .clear-btn:hover {
        background: #c82333;
      }

      /* Notification Bell Styles */
      .notification-bell-container {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1000;
      }

      .notification-bell-btn {
        background: #007bff;
        color: white;
        border: none;
        border-radius: 50%;
        width: 50px;
        height: 50px;
        cursor: pointer;
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 18px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
        transition: all 0.3s ease;
      }

      .notification-bell-btn:hover {
        background: #0056b3;
        transform: scale(1.1);
      }

      .notification-badge {
        position: absolute;
        top: -5px;
        right: -5px;
        background: #dc3545;
        color: white;
        border-radius: 50%;
        width: 20px;
        height: 20px;
        font-size: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
      }

      .notification-container {
        position: fixed;
        top: 80px;
        right: 20px;
        z-index: 999;
        max-width: 300px;
      }
    </style>
  </head>
  <body>
    <!-- Notification Bell -->
    <div class="notification-bell-container">
      <button
        id="notification-bell"
        class="notification-bell-btn"
        title="Notifications"
      >
        <i class="fas fa-bell"></i>
        <span
          class="notification-badge"
          id="notification-badge"
          style="display: none"
          >0</span
        >
      </button>
    </div>

    <!-- Notification Container -->
    <div id="notificationContainer" class="notification-container"></div>

    <div class="header">
      <h1>üêõ Shared Block Debug Log</h1>
      <p>Real-time logging of shared block operations</p>
      <button class="refresh-btn" onclick="refreshLog()">üîÑ Refresh Log</button>
      <button class="clear-btn" onclick="clearLog()">üóëÔ∏è Clear Log</button>
    </div>

    <div class="log-container" id="logContainer">Loading debug log...</div>

    <script>
      let autoRefresh = true;

      async function refreshLog() {
        try {
          const response = await fetch("/api/debug-log");
          const logContent = await response.text();
          document.getElementById("logContainer").textContent = logContent;

          // Auto-scroll to bottom
          const container = document.getElementById("logContainer");
          container.scrollTop = container.scrollHeight;
        } catch (error) {
          document.getElementById("logContainer").textContent =
            "Error loading log: " + error.message;
        }
      }

      async function clearLog() {
        if (confirm("Are you sure you want to clear the log?")) {
          try {
            // Clear by posting an empty request - this will reinitialize the log
            await fetch("/api/debug-log", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({
                category: "SYSTEM",
                message: "Log cleared by user",
                data: null,
              }),
            });
            refreshLog();
          } catch (error) {
            alert("Error clearing log: " + error.message);
          }
        }
      }

      // Initial load
      refreshLog();

      // Auto-refresh every 2 seconds
      setInterval(() => {
        if (autoRefresh) {
          refreshLog();
        }
      }, 2000);

      // Pause auto-refresh when user scrolls up
      document
        .getElementById("logContainer")
        .addEventListener("scroll", function () {
          const container = this;
          const isAtBottom =
            container.scrollTop + container.clientHeight >=
            container.scrollHeight - 10;
          autoRefresh = isAtBottom;
        });
    </script>
  </body>
</html>
